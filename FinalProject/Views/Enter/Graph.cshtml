
@{
    ViewBag.Title = "Graph";
}

<canvas class="myCanvas" id="myCanvas" width="600" height="50">
    Your browser does not support the canvas element.
</canvas>
<script>
var canvas = document.getElementById("myCanvas");
var ctx=canvas.getContext("2d");
ctx.font = "30px Palatino Linotype";

// Create gradient
var grd = ctx.createLinearGradient(0, 500, 750, 0);
grd.addColorStop(0, "MidnightBlue");
//grd.addColorStop(1, "DeepSkyBlue");
grd.addColorStop(1, "Aqua");


// Fill with gradient
ctx.fillStyle = grd;
ctx.textAlign = "center";
ctx.fillText("Graph of articles views", canvas.width/2, canvas.height/2);
</script>

<style>
    svg {
        position: relative;
        left: 50%;
        -webkit-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        transform: translateX(-50%);
    }

    .axis {
        font: 10px sans-serif;
    }

        .axis path,
        .axis line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
        }

    .bar {
        fill: steelblue;
    }

        .bar:hover {
            fill: brown;
        }

    .axis--x path {
        display: none;
    }
</style>
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

var margin = {top: 20, right: 20, bottom: 70, left: 40},
    width = 600 - margin.left - margin.right,
    height = 300 - margin.top - margin.bottom;

var x = d3.scale.ordinal().rangeRoundBands([0, width], .05);

var y = d3.scale.linear().range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom")

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .ticks(10);

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform",
          "translate(" + margin.left + "," + margin.top + ")");

d3.json("json", function(error, data) {

    data.forEach(function(d) {
        d.articleId = d.articleId;
        d.total = +d.total;
    });

    x.domain(data.map(function (d) { return d.articleId; }));
    y.domain([0, d3.max(data, function (d) { return d.total; })]);

  svg.append("g")
      .attr("class", "x axis axis--x")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .selectAll("text")
      .style("text-anchor", "end")
      .attr("dx", "-.8em")
      .attr("dy", "-.55em")
      .attr("transform", "rotate(-90)" );

  svg.append("g")
      .attr("class", "y axis axis--y")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Articles");

    svg.selectAll(".bar")
    .data(data)
    .enter().append("rect")
      .style("fill", "steelblue")
      .attr("class", "bar")
      .attr("x", function (d) { return x(d.articleId); })
      .attr("width", x.rangeBand())
      .attr("y", function (d) { return y(d.total); })
      .attr("height", function (d) { return height - y(d.total); });

});

</script>