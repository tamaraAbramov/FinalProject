@model IEnumerable<FinalProject.Models.SearchUserOutput>
@{
    ViewBag.Title = "Manage Users";
}


@section Scripts {
    <script>
        $(document).ready(function () {

            $('#SearchUsers').click(SearchResultUsers);

            function SearchResultUsers() {
            var defultResult = "###";
            var email;
            var firstName;
            var lastName;
            var roleType;
            var minCount;

            if (!$('#UserEmail').val()) {
                email = defultResult;
            }
            else {
                email = $('#UserEmail').val();
            }

            if (!$('#FirstName').val()) {
                firstName = defultResult;
            }
            else {
                firstName = $('#FirstName').val();
            }

            if (!$('#LastName').val()) {
                lastName = defultResult;
            }
            else {
                lastName = $('#LastName').val();
            }

            if ($('#RoleType').val() == "All") {
                roleType = defultResult;
            }
            else {
                roleType = $('#RoleType').val();
            }

            minCount = document.getElementById('min-range').value;

            $.get('/Account/SearchUsers', {
                email: email, firstName: firstName, lastName : lastName,
                roleType: roleType, minCount: minCount
            },
              function (result) {
                  console.log(result);
                  table = document.getElementsByClassName("table table-hover")[0].children[0]
                  tds = document.getElementsByClassName("table table-hover")[0].children[0].children;
                  // remove old table content
                  for (i = tds.length - 1; i >= 1; i--) {
                      tds[i].remove();
                  }
                  // add new table rows
                  for (i = 0; i < result.length; i++){
                     

                      var email = result[i].User.Email;
                      var firstName = result[i].User.FirstName;
                      var lastName = result[i].User.LastName;
                      var gender = result[i].User.Gender;
                      var roleType = result[i].RoleType;
                      var countOfArticles = result[i].CountOfArticles;
                      var userId = result[i].User.Id;

                      var tr = document.createElement("tr");
                      var th = document.createElement("th");
                      var text = document.createTextNode(email);
                      th.appendChild(text);
                      tr.appendChild(th);

                      var th = document.createElement("th");
                      var text = document.createTextNode(firstName);
                      th.appendChild(text);
                      tr.appendChild(th);

                      var th = document.createElement("th");
                      var text = document.createTextNode(lastName);
                      th.appendChild(text);
                      tr.appendChild(th);

                      var th = document.createElement("th");
                      var text = document.createTextNode(gender);
                      th.appendChild(text);
                      tr.appendChild(th);

                      var th = document.createElement("th");
                      var text = document.createTextNode(roleType);
                      th.appendChild(text);
                      tr.appendChild(th);

                      var th = document.createElement("th");
                      var text = document.createTextNode(countOfArticles);
                      th.appendChild(text);
                      tr.appendChild(th);

                      var th = document.createElement("th");
                      var a = document.createElement("a");
                      a.href = "/Account/Delete/" + userId;
                      var text = document.createTextNode("Delete");
                      a.appendChild(text);
                      th.appendChild(a);
                      tr.appendChild(th);

                      table.appendChild(tr);
                  }
                
              });
        }
});

    </script>
    <script defer>

		function changeRange() {
		var width = document.getElementById('min-range').value;
		document.getElementById('min-range-value').textContent = width;
		}
    </script>
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Manage Users</title>
</head>
<body>
    <h2>Manage Users</h2>
    <p>
        @Html.ActionLink("Add new author", "CreateAuthor")
    </p>

    <div class="top-one">
        <div class="search-tbl-header">
            <table cellpadding="0" cellspacing="0" border="0" class="search-tbl">
                <thead>
                    <tr>
                        <th class="search-tbl-th"><input type="email" placeholder="User Email" id="UserEmail" name="UserEmail" class="search-box"></th>             
                        <th class="search-tbl-th"><input type="text" placeholder="User first name" id="FirstName" name="FirstName" class="search-box"></th>
                        <th class="search-tbl-th"><input type="text"   placeholder="User last name" id="LastName" name="LastName" class="search-box"></th>
                           <th class="search-tbl-th">
                               <div class="col-md-10">
                                   <select class="form-control" id="RoleType" name="RoleType">
                                       <option>All</option>
                                       <option> Admin</option>
                                       <option>Author</option>
                                       <option>NormalUser</option>
                                   </select>
                                </div>
                           </th>
                           <th class="search-tbl-th">
                            Minimum articles written by:
                            <span id="min-range-value">0</span>
                            <br />
                            <input id="min-range" type="range" min="0" max="10" value="0" onchange="changeRange()">
                        </th>
                        <th class="search-tbl-th"><button id="SearchUsers" class="btn search-btn">Search</button></th>
                    </tr>
                </thead>
            </table>
        </div>

        @if (Model.Count() > 0)
        {
            <div class="panel-heading" id="list">
            </div>
            <div class="panel-body">
                <table class="table table-hover">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.User.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User.FirstName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User.LastName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.User.Gender)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.RoleType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.CountOfArticles)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <th>
                                @Html.DisplayFor(modelItem => item.User.Email)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.User.FirstName)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.User.LastName)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.User.Gender)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.RoleType)
                            </th>
                            <th>
                                @Html.DisplayFor(modelItem => item.CountOfArticles)
                            </th>
                            <th>
                                @Html.ActionLink("Delete", "Delete", new { id = item.User.Id })
                            </th>
                        </tr>
                    }

                </table>
            </div>
        }
        else
        {
            <div class="panel-body">
                <h2 class="panel-title">Results not found</h2>
            </div>
        }





    </div>
</body>
</html>